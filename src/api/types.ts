// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

export type AppConfig = { lang: Language, path_data: string, path_deploy: string | null, };

/**
 * Represents archive information for a data item, such as size and path
 */
export type ArchiveInfo = { "type": "None" } | { "type": "ArchiveFile", "data": { size: number, path: string, password: string | null, } } | { "type": "CommonFile", "data": { size: number, path: string, } } | { "type": "Directory", "data": { size: number, path: string, } };

/**
 * Represents the type of content for a data item, with detailed information
 */
export type ContentInfo = { "type": "Undefined" } | { "type": "Game", "data": GameData };

/**
 * Types of content available on the DLSite.
 */
export type DLContentType = "Doujin" | "Comics" | "PcGames" | "SmartphoneGames" | "DoujinR18" | "ComicsR18" | "HGames" | "SmartphoneGamesR18";

export type DLFetchArg = { id: string, content_type: DLContentType, };

export type DLFetchInfo = { title: string, circle: string, scenario: Array<string>, illustration: Array<string>, category: Array<string>, tags: Array<string>, description: Array<string>, og_image: string | null, };

export type DLSiteDistributionData = { id: string, content_type: DLContentType, };

export type DeployArg = { use_config_dir: boolean, target_dir: string | null, };

export type DeployInfo = { "type": "None" } | { "type": "File", "data": { path: string, } } | { "type": "Directory", "data": { path: string, } };

/**
 * Represents game data, including version, developer, publisher, and platform
 * information
 */
export type GameData = { version: string, game_type: GameType, developer: string | null, publisher: string | null, sys_platform: Array<GameSysPlatform>, distribution: GameDistribution, };

/**
 * Represents the distribution method of a game, such as Steam or DLSite
 */
export type GameDistribution = { "type": "Unknown" } | { "type": "Steam", "data": SteamDistributionData } | { "type": "DLSite", "data": DLSiteDistributionData } | { "type": "Other", "data": OtherDistributionData };

/**
 * Represents the platform on which a game can run
 */
export type GameSysPlatform = "Windows" | "Linux" | "MacOS" | "Android" | "IOS" | "Web";

/**
 * Represents the type of game, such as RPG Maker
 */
export type GameType = "Unspecified" | "RPG" | "SLG" | "AVG";

export type Language = "zh-CN" | "en-US" | "ja-JP";

/**
 * Basic metadata structure for data item
 */
export type Metadata = { 
/**
 * Unique identifier for the data item,
 * by default a [Uuid]
 */
id: string, 
/**
 * The title of the data item
 */
title: string, 
/**
 * The other names of the data item
 */
alias: Array<string>, 
/**
 * Tags associated with the data item
 */
tags: Array<string>, 
/**
 * Collection names, if any
 */
collection: string | null, 
/**
 * Description of the data item
 */
description: string | null, 
/**
 * Image hash, if any
 */
image: string | null, 
/**
 * Rating
 */
rating: number, 
/**
 * The content type of the data item
 */
content_info: ContentInfo, 
/**
 * Archive information
 */
archive_info: ArchiveInfo, 
/**
 * Deployment information, if any
 */
deploy_info: DeployInfo, create_time: string, update_time: string, };

/**
 * Fields in [Metadata] with optional, used in communication with the frontend
 */
export type MetadataOption = { id: string | null, title?: string | null, alias: Array<string> | null, tags: Array<string> | null, collection: string | null, description: string | null, image: string | null, rating: number | null, content_info: ContentInfo | null, archive_info: ArchiveInfo | null, flag_create_archive: boolean, };

export type OtherDistributionData = { name: string, id: string, };

export type SteamDistributionData = { app_id: string, };
