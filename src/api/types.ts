// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

/**
 * Represents archive information for a data item, such as size and path
 */
export type ArchiveInfo = "None" | { "ArchiveFile": { size: number, path: string, password: string | null, } } | { "CommonFile": { size: number, path: string, } } | { "Directory": { size: number, path: string, } };

/**
 * Represents collection information for grouping data items
 */
export type CollectionDef = { id: string, name: string, };

/**
 * Represents the type of content for a data item, with detailed information
 */
export type ContentInfo = "Undefined" | { "Game": GameData };

/**
 * Types of content available on the DLSite.
 */
export type DLContentType = "Maniax" | "Books" | "Pro" | "AppX";

/**
 * Represents game data, including version, developer, publisher, and platform information
 */
export type GameData = { version: string, developer: string | null, publisher: string | null, sys_platform: Array<GameSysPlatform>, distribution: GameDistribution, };

/**
 * Represents the distribution method of a game, such as Steam or DLSite
 */
export type GameDistribution = "Unknown" | { "Steam": { app_id: number, } } | { "DLSite": { id: string, content_type: DLContentType, } };

/**
 * Represents the platform on which a game can run
 */
export type GameSysPlatform = "Windows" | "Linux" | "MacOS" | "Android" | "IOS" | "Web";

/**
 * Basic metadata structure for data item
 */
export type Metadata = { 
/**
 * Unique identifier for the data item,
 * by default a [Uuid]
 */
id: string, 
/**
 * The title of the data item
 */
title: string, 
/**
 * The other names of the data item
 */
alias: Array<string>, 
/**
 * Tags associated with the data item
 */
tags: Array<string>, 
/**
 * Collection names, if any
 */
collection: string | null, 
/**
 * The content type of the data item
 */
content_info: ContentInfo, 
/**
 * Archive information
 */
archive_info: ArchiveInfo, create_time: string, update_time: string, };

/**
 * Fields in [Metadata] with optional, used in communication with the frontend
 */
export type MetadataOption = { id: string | null, title: string | null, alias: Array<string> | null, tags: Array<string> | null, collection: string | null, content_info: ContentInfo | null, archive_info: ArchiveInfo | null, flag_create_archive: boolean, };
